box_age_radio <- cancer_new %>%
ggplot() +
geom_boxplot(aes(radio_therapy, overall_survival_months, fill = radio_therapy)) +
theme(
text = element_text(size = 10),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
#        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
) +
ggtitle("Age Comparison") +
labs(title = "Overall Survival for Radio Therapy",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Radio Therapy") +
stat_summary(aes(radio_therapy, overall_survival_months, fill = radio_therapy),
fun = mean, colour = "yellow", geom = "point", shape = 18, size = 5
)
box_age_tumor <- cancer_new %>%
ggplot() +
geom_boxplot(aes(tumor_stage, overall_survival_months, fill = tumor_stage)) +
theme(
text = element_text(size = 10),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
#        axis.text.x = element_text(angle = 45)
) +
ggtitle("Age Comparison") +
labs(title = "Overall Survival for Tumor Stage",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Tumor Stage") +
stat_summary(aes(tumor_stage, overall_survival_months, fill = tumor_stage),
fun = mean, colour = "yellow", geom = "point", shape = 18, size = 5
)
box_age_death <- cancer_new %>%
ggplot() +
geom_boxplot(aes(death_from_cancer, overall_survival_months, fill = death_from_cancer)) +
theme(
text = element_text(size = 10),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(angle = 45)
) +
ggtitle("Age Comparison") +
labs(title = "Overall Survival for Living Condition",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Living Condition") +
stat_summary(aes(death_from_cancer, overall_survival_months, fill = death_from_cancer),
fun = mean, colour = "yellow", geom = "point", shape = 18, size = 5
)
grid.arrange(box_age_chemo, box_age_hormo, nrow = 1)
grid.arrange(box_age_radio, box_age_type, nrow = 1)
grid.arrange(box_age_tumor, box_age_death, nrow = 1)
options(repr.plot.width = 20, repr.plot.height = 5)
reg_0 = lm(overall_survival_months~age_at_diagnosis*type_of_breast_surgery,data=cancer_new)  # TODO
summary(reg_0)
plot_age_type <- ggplot(cancer_new, aes(x = age_at_diagnosis, y = overall_survival_months, color = type_of_breast_surgery)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Breast Surgery",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Breast Surgery")
reg_1 = lm(overall_survival_months~age_at_diagnosis*chemotherapy,data=cancer_new)  # TODO
summary(reg_1)
plot_age_chemo <- ggplot(cancer_new, aes(x = age_at_diagnosis, y = overall_survival_months, color = chemotherapy)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Chemotherapy",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Chemotherapy")
reg_2 = lm(overall_survival_months~age_at_diagnosis*hormone_therapy,data=cancer_new)  # TODO
summary(reg_2)
plot_age_hormo <- ggplot(cancer_new, aes(x = age_at_diagnosis, y = overall_survival_months, color = hormone_therapy)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Hormone Therapy",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Hormone Therapy")
reg_3 = lm(overall_survival_months~age_at_diagnosis*radio_therapy,data=cancer_new)  # TODO
summary(reg_3)
plot_age_radio <- ggplot(cancer_new, aes(x = age_at_diagnosis, y = overall_survival_months, color = radio_therapy)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Radio Therapy",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Radio Therapy")
reg_4 = lm(overall_survival_months~age_at_diagnosis*tumor_stage,data=cancer_new)  # TODO
summary(reg_4)
plot_age_tumor <- ggplot(cancer_new, aes(x = age_at_diagnosis, y = overall_survival_months, color = tumor_stage)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Tumor Stage",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Tumor Stage")
# reg_3_1 = lm(overall_survival_months~age_at_diagnosis+radio_therapy,data=cancer_new)  # TODO
# summary(reg_3_1)
# scatterplot(overall_survival_months~age_at_diagnosis+radio_therapy, data=cancer_new, smooth=FALSE, main="Overall Survival against Age and Radio Therapy", xlab="Age (Years)", ylab="Overall Survival (Months)")
reg_5 = lm(overall_survival_months~age_at_diagnosis*death_from_cancer,data=cancer_new)  # TODO
summary(reg_5)
plot_age_death <- ggplot(cancer_new, aes(x = age_at_diagnosis, y = overall_survival_months, color = death_from_cancer)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Living Condition",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Living Condition")
# grid.arrange(plot_age_chemo, plot_age_hormo, plot_age_radio)
# grid.arrange(plot_age_type, plot_age_tumor, plot_age_death)
grid.arrange(plot_age_chemo, plot_age_hormo, nrow = 1)
grid.arrange(plot_age_radio, plot_age_type, nrow = 1)
grid.arrange(plot_age_tumor, plot_age_death, nrow = 1)
# fullmod = lm(overall_survival_months ~ .*.,data=cancer_new)
fullmod = lm(overall_survival_months ~ age_at_diagnosis + chemotherapy * hormone_therapy * radio_therapy + age_at_diagnosis : chemotherapy + age_at_diagnosis : hormone_therapy + age_at_diagnosis : radio_therapy + tumor_stage + tumor_stage : chemotherapy + tumor_stage : hormone_therapy + tumor_stage : radio_therapy + type_of_breast_surgery + death_from_cancer, data=cancer_new)
finalmod = step(fullmod, direction = "both", trace = 1)
# finalmod = step(fullmod, direction = "both", trace = 0)
summary(finalmod)
# Create the residual plot
# TODO
plot(finalmod$fitted.values, finalmod$residuals, xlab="Fitted Values", ylab="Residuals")
abline(a = 0, b = 0)
lines(lowess(finalmod$fitted.values, finalmod$residuals), col = "blue", lwd = 2)
qqnorm(finalmod$residuals)
qqline(finalmod$residuals)
summary(fit)
source("~/.active-rstudio-document", echo=TRUE)
askpr=c(54.8, 77.8, 53.8, 61.5, 41.99, 65.99, 71.99, 58.8, 51.68, 60.8, 78.8, 68.5, 50.8, 51.99, 45.99, 33.7, 73.9, 53.9, 40.8, 68.8, 58.68, 81.9, 54.98, 50.8, 48.8, 57.5, 56.88, 57.8, 86.8, 46.8, 47.9, 58.39, 59.8, 74.8, 40.8, 73.8, 25.9, 108.8, 65.8, 53.8)
ffarea=c(11.26, 16.5, 12.22, 14.5, 12.9, 22.78, 15.05, 17.37, 15.1, 13.2, 19.48, 15.76, 12.27, 12.09, 16.01, 12, 15.15, 11.84, 12.26, 15.95, 13.96, 20.95, 13.06, 16.6, 14.8, 13.46, 15.78, 12.01, 15.08, 16.2, 12.1, 15.09, 17.63, 17.48, 14, 17.54, 6.1, 23.98, 13.45, 10.95)
age=c(0, 3, 9, 7, 44, 35, 8, 26, 20, 3, 11, 4, 17, 7, 25, 28, 0, 15, 29, 18, 9, 19, 1, 23, 50, 10, 17, 0, 1, 30, 7, 8, 26, 5, 38, 9, 11, 16, 1, 18)
richmondtownh=data.frame(askpr,ffarea,age)
reg = lm(askpr~ffarea + age)
summary(reg)
summary(reg)
summary(reg)$r.squared
mean(askpr)
sd(askpr) # 59.4265
summary(reg)$coefficients
summary(reg)$coefficients[, "Estimate"]
reg$coefficients
mean_x_T = cbind(1, mean(ffarea), mean(age))
mean_x_T = cbind(1, mean(ffarea), mean(age))
mean_y_hat = reg$coefficients %*% t(mean_x_T)
mean_y_hat
reg$fitted.values
sd_y_hat = sd(reg$fitted.values)
mean_y_hat = mean(reg$fitted.values)
mean_y_hat = mean(reg$fitted.values)
mean_y_hat
sd_y_hat = sd(reg$fitted.values)
sd_y_hat
cov(askpr, y_hat)
y_hat = reg$fitted.values
mean_y_hat = mean(y_hat)
mean_y_hat # 59.4265
sd_y_hat = sd(y_hat)
sd_y_hat # 13.88124
cov(askpr, y_hat)
cor(askpr, y_hat)
w_i = 14.1435 + 3.93777 * ffarea - 0.86737 * age
cor(w_i, askpr)
source("~/Documents â€“ SNG058/Canada - UBC/2024 Term 1/STAT 306/Webwork and Homework/HW8.R", echo=TRUE)
# Q2
applicants=c(66.515, 50.299, 14.552, 16.958, 33.736, 21.359, 31.941, 20.443, 9.679, 10.394, 36.788, 20.923, 11.258, 35.822, 5.713, 19.814, 24.988, 33.714, 14.887, 7.101, 44.76, 12.34, 16.689, 25.194, 26.496, 60.543, 5.345, 10.991, 30.266, 1.751, 5.111, 10.111, 7.408, 12.92, 16.125, 5.002, 28.518, 15.61, 36.362, 13.758, 5.017, 10.217, 49.776, 25.438, 36.101, 7.075, 18.107, 8.832, 5.465, 18.42, 39.896, 73.782, 20.934, 10.245, 14.944, 10.332, 31.611, 14.116, 32.19, 31.332, 7.532, 20.744, 8.754, 3.542, 40.727, 73.448, 31.28, 20.175, 25.884, 20.756, 24.233, 20.918, 13.799, 33.226, 86.537)
per.admit=c(37, 50, 33, 83, 51, 75, 60, 52, 63, 95, 53, 77, 83, 59, 83, 51, 53, 41, 82, 70, 45, 36, 76, 68, 62, 40, 93, 81, 55, 59, 76, 52, 87, 70, 84, 84, 44, 64, 76, 75, 49, 60, 32, 57, 58, 57, 60, 84, 83, 80, 59, 16, 74, 61, 66, 63, 55, 78, 71, 28, 79, 73, 95, 89, 56, 33, 50, 53, 33, 52, 73, 56, 84, 50, 19)
num.enroll=c(30.051, 47.04, 8.437, 25.912, 36.047, 24.096, 48.378, 33.989, 20.517, 20.626, 58.322, 16.571, 13.183, 45.14, 14.747, 20.611, 41.938, 24.607, 28.686, 15.829, 51.147, 5.962, 35.313, 22.68, 37.485, 34.508, 13.952, 31.515, 41.226, 11.645, 7.099, 9.233, 28.515, 30.69, 29.477, 16.936, 16.695, 27.238, 46.416, 30.848, 10.241, 13.979, 43.625, 42.598, 21.498, 10.725, 20.655, 19.934, 15.805, 15.117, 39.752, 37.565, 29.217, 39.74, 30.297, 11.314, 44.784, 28.886, 61.642, 29.135, 19.507, 31.224, 14.534, 10.061, 17.866, 30.709, 26.541, 49.61, 23.109, 21.857, 12.856, 35.197, 14.982, 60.767, 41.845)
stfacratio=c(19, 17, 12, 17, 21, 19, 16, 16, 21, 20, 18, 17, 20, 19, 19, 15, 25, 16, 15, 17, 17, 16, 18, 15, 14, 18, 18, 17, 26, 13, 13, 18, 22, 19, 21, 17, 20, 19, 17, 17, 15, 19, 12, 18, 19, 18, 15, 22, 20, 19, 12, 17, 18, 26, 24, 11, 18, 19, 20, 13, 13, 16, 19, 17, 18, 19, 16, 26, 18, 16, 15, 18, 19, 31, 16)
avg.grant=c(17.09, 6.541, 14.779, 8.901, 10.736, 6.451, 10.726, 9.322, 5.421, 7.338, 8.435, 9.507, 7.746, 11.818, 4.89, 8.076, 5.976, 7.621, 10.526, 8.591, 7.511, 9.138, 6.18, 8.788, 7.327, 15.528, 5.036, 6.726, 4.58, 6.601, 10.316, 7.215, 4.965, 7.959, 6.229, 5.896, 6.838, 6.372, 8.834, 7.736, 6.974, 7.879, 14.671, 8.036, 16.227, 7.745, 9.097, 5.462, 5.826, 11.579, 9.322, 16.425, 5.715, 6.234, 5.343, 9.924, 13.821, 7.035, 8.731, 13.447, 7.576, 7.95, 5.969, 4.412, 17.287, 16.638, 10.265, 5.055, 8.798, 8.684, 12.615, 8.227, 4.582, 4.616, 17.423)
grad.rate=c(86, 86, 93, 68, 67, 67, 79, 71, 50, 46, 82, 63, 43, 84, 53, 54, 57, 70, 67, 44, 73, 67, 62, 80, 66, 81, 49, 59, 75, 19, 66, 12, 41, 38, 52, 34, 79, 53, 75, 56, 40, 61, 91, 82, 66, 43, 57, 54, 37, 78, 70, 91, 63, 40, 41, 69, 81, 61, 80, 89, 56, 83, 50, 45, 74, 86, 82, 49, 79, 82, 76, 79, 49, 65, 92)
region=c('FarWest', 'Mid', 'Southeast', 'Southeast', 'Southeast', 'FarWest', 'Mid', 'Southeast', 'Southeast', 'GLNE', 'GLNE', 'GLNE', 'GLNE', 'GLNE', 'Mid', 'GLNE', 'Southeast', 'Mid', 'FarWest', 'West', 'Mid', 'West', 'GLNE', 'Mid', 'Mid', 'FarWest', 'West', 'West', 'Southeast', 'Southeast', 'GLNE', 'West', 'FarWest', 'GLNE', 'GLNE', 'GLNE', 'Mid', 'Southeast', 'GLNE', 'Southeast', 'Southeast', 'Mid', 'GLNE', 'GLNE', 'FarWest', 'Southeast', 'GLNE', 'FarWest', 'Southeast', 'GLNE', 'GLNE', 'FarWest', 'GLNE', 'West', 'Southeast', 'Mid', 'FarWest', 'FarWest', 'West', 'Southeast', 'FarWest', 'Southeast', 'Mid', 'Mid', 'FarWest', 'FarWest', 'GLNE', 'Southeast', 'Southeast', 'Southeast', 'GLNE', 'Southeast', 'West', 'Southeast', 'FarWest')
univ = data.frame(applicants, per.admit, num.enroll, stfacratio, avg.grant, grad.rate, region)
reg_2 = lm(log(applicants) ~ per.admit + num.enroll + stfacratio + avg.grant + grad.rate + region)
summary(reg_2)
summary(reg_2)$cov.unscaled
reg_3 = lm(log(applicants) ~ per.admit + stfacratio + avg.grant + grad.rate + region * num.enroll)
summary(reg_2)
reg_3 = lm(log(applicants) ~ per.admit + stfacratio + avg.grant + grad.rate + region * num.enroll)
summary(reg_3)
summary(reg_2)$cov.unscaled
reg_3 = lm(log(applicants) ~ per.admit + stfacratio + avg.grant + grad.rate + region * num.enroll)
summary(reg_3)
source("~/Documents â€“ SNG058/Canada - UBC/2024 Term 1/STAT 306/Webwork and Homework/HW8.R", echo=TRUE)
source("~/Documents â€“ SNG058/Canada - UBC/2024 Term 1/STAT 306/Webwork and Homework/HW8.R", echo=TRUE)
source("~/Documents â€“ SNG058/Canada - UBC/2024 Term 1/STAT 306/Webwork and Homework/HW8.R")
# Q1
askpr=c(54.8, 77.8, 53.8, 61.5, 41.99, 65.99, 71.99, 58.8, 51.68, 60.8, 78.8, 68.5, 50.8, 51.99, 45.99, 33.7, 73.9, 53.9, 40.8, 68.8, 58.68, 81.9, 54.98, 50.8, 48.8, 57.5, 56.88, 57.8, 86.8, 46.8, 47.9, 58.39, 59.8, 74.8, 40.8, 73.8, 25.9, 108.8, 65.8, 53.8)
ffarea=c(11.26, 16.5, 12.22, 14.5, 12.9, 22.78, 15.05, 17.37, 15.1, 13.2, 19.48, 15.76, 12.27, 12.09, 16.01, 12, 15.15, 11.84, 12.26, 15.95, 13.96, 20.95, 13.06, 16.6, 14.8, 13.46, 15.78, 12.01, 15.08, 16.2, 12.1, 15.09, 17.63, 17.48, 14, 17.54, 6.1, 23.98, 13.45, 10.95)
age=c(0, 3, 9, 7, 44, 35, 8, 26, 20, 3, 11, 4, 17, 7, 25, 28, 0, 15, 29, 18, 9, 19, 1, 23, 50, 10, 17, 0, 1, 30, 7, 8, 26, 5, 38, 9, 11, 16, 1, 18)
richmondtownh=data.frame(askpr,ffarea,age)
reg = lm(askpr~ffarea + age)
summary(reg)
summary(reg)$r.squared # 0.8116191
mean(askpr) # 59.4265
sd(askpr) # 15.40821
y_hat = reg$fitted.values
mean_y_hat = mean(y_hat)
mean_y_hat # 59.4265
sd_y_hat = sd(y_hat)
sd_y_hat # 13.88124
cov(askpr, y_hat) # 192.6889
cor(askpr, y_hat) # 0.9008991
w_i = 14.1435 + 3.93777 * ffarea - 0.86737 * age
cor(w_i, askpr)
# Q2
applicants=c(66.515, 50.299, 14.552, 16.958, 33.736, 21.359, 31.941, 20.443, 9.679, 10.394, 36.788, 20.923, 11.258, 35.822, 5.713, 19.814, 24.988, 33.714, 14.887, 7.101, 44.76, 12.34, 16.689, 25.194, 26.496, 60.543, 5.345, 10.991, 30.266, 1.751, 5.111, 10.111, 7.408, 12.92, 16.125, 5.002, 28.518, 15.61, 36.362, 13.758, 5.017, 10.217, 49.776, 25.438, 36.101, 7.075, 18.107, 8.832, 5.465, 18.42, 39.896, 73.782, 20.934, 10.245, 14.944, 10.332, 31.611, 14.116, 32.19, 31.332, 7.532, 20.744, 8.754, 3.542, 40.727, 73.448, 31.28, 20.175, 25.884, 20.756, 24.233, 20.918, 13.799, 33.226, 86.537)
per.admit=c(37, 50, 33, 83, 51, 75, 60, 52, 63, 95, 53, 77, 83, 59, 83, 51, 53, 41, 82, 70, 45, 36, 76, 68, 62, 40, 93, 81, 55, 59, 76, 52, 87, 70, 84, 84, 44, 64, 76, 75, 49, 60, 32, 57, 58, 57, 60, 84, 83, 80, 59, 16, 74, 61, 66, 63, 55, 78, 71, 28, 79, 73, 95, 89, 56, 33, 50, 53, 33, 52, 73, 56, 84, 50, 19)
num.enroll=c(30.051, 47.04, 8.437, 25.912, 36.047, 24.096, 48.378, 33.989, 20.517, 20.626, 58.322, 16.571, 13.183, 45.14, 14.747, 20.611, 41.938, 24.607, 28.686, 15.829, 51.147, 5.962, 35.313, 22.68, 37.485, 34.508, 13.952, 31.515, 41.226, 11.645, 7.099, 9.233, 28.515, 30.69, 29.477, 16.936, 16.695, 27.238, 46.416, 30.848, 10.241, 13.979, 43.625, 42.598, 21.498, 10.725, 20.655, 19.934, 15.805, 15.117, 39.752, 37.565, 29.217, 39.74, 30.297, 11.314, 44.784, 28.886, 61.642, 29.135, 19.507, 31.224, 14.534, 10.061, 17.866, 30.709, 26.541, 49.61, 23.109, 21.857, 12.856, 35.197, 14.982, 60.767, 41.845)
stfacratio=c(19, 17, 12, 17, 21, 19, 16, 16, 21, 20, 18, 17, 20, 19, 19, 15, 25, 16, 15, 17, 17, 16, 18, 15, 14, 18, 18, 17, 26, 13, 13, 18, 22, 19, 21, 17, 20, 19, 17, 17, 15, 19, 12, 18, 19, 18, 15, 22, 20, 19, 12, 17, 18, 26, 24, 11, 18, 19, 20, 13, 13, 16, 19, 17, 18, 19, 16, 26, 18, 16, 15, 18, 19, 31, 16)
avg.grant=c(17.09, 6.541, 14.779, 8.901, 10.736, 6.451, 10.726, 9.322, 5.421, 7.338, 8.435, 9.507, 7.746, 11.818, 4.89, 8.076, 5.976, 7.621, 10.526, 8.591, 7.511, 9.138, 6.18, 8.788, 7.327, 15.528, 5.036, 6.726, 4.58, 6.601, 10.316, 7.215, 4.965, 7.959, 6.229, 5.896, 6.838, 6.372, 8.834, 7.736, 6.974, 7.879, 14.671, 8.036, 16.227, 7.745, 9.097, 5.462, 5.826, 11.579, 9.322, 16.425, 5.715, 6.234, 5.343, 9.924, 13.821, 7.035, 8.731, 13.447, 7.576, 7.95, 5.969, 4.412, 17.287, 16.638, 10.265, 5.055, 8.798, 8.684, 12.615, 8.227, 4.582, 4.616, 17.423)
grad.rate=c(86, 86, 93, 68, 67, 67, 79, 71, 50, 46, 82, 63, 43, 84, 53, 54, 57, 70, 67, 44, 73, 67, 62, 80, 66, 81, 49, 59, 75, 19, 66, 12, 41, 38, 52, 34, 79, 53, 75, 56, 40, 61, 91, 82, 66, 43, 57, 54, 37, 78, 70, 91, 63, 40, 41, 69, 81, 61, 80, 89, 56, 83, 50, 45, 74, 86, 82, 49, 79, 82, 76, 79, 49, 65, 92)
region=c('FarWest', 'Mid', 'Southeast', 'Southeast', 'Southeast', 'FarWest', 'Mid', 'Southeast', 'Southeast', 'GLNE', 'GLNE', 'GLNE', 'GLNE', 'GLNE', 'Mid', 'GLNE', 'Southeast', 'Mid', 'FarWest', 'West', 'Mid', 'West', 'GLNE', 'Mid', 'Mid', 'FarWest', 'West', 'West', 'Southeast', 'Southeast', 'GLNE', 'West', 'FarWest', 'GLNE', 'GLNE', 'GLNE', 'Mid', 'Southeast', 'GLNE', 'Southeast', 'Southeast', 'Mid', 'GLNE', 'GLNE', 'FarWest', 'Southeast', 'GLNE', 'FarWest', 'Southeast', 'GLNE', 'GLNE', 'FarWest', 'GLNE', 'West', 'Southeast', 'Mid', 'FarWest', 'FarWest', 'West', 'Southeast', 'FarWest', 'Southeast', 'Mid', 'Mid', 'FarWest', 'FarWest', 'GLNE', 'Southeast', 'Southeast', 'Southeast', 'GLNE', 'Southeast', 'West', 'Southeast', 'FarWest')
# univ$region <- relevel(factor(univ$region), ref = "Southeast")
region <- relevel(factor(region), ref = "Southeast")
univ = data.frame(applicants, per.admit, num.enroll, stfacratio, avg.grant, grad.rate, region)
reg_2 = lm(log(applicants) ~ per.admit + num.enroll + stfacratio + avg.grant + grad.rate + region)
sum_reg_2 = summary(reg_2)
sum_reg_2$cov.unscaled
reg_3 = lm(log(applicants) ~ per.admit + stfacratio + avg.grant + grad.rate + region * num.enroll)
summary(reg_3)
sum_reg_2
source("~/Documents â€“ SNG058/Canada - UBC/2024 Term 1/STAT 306/Webwork and Homework/HW8.R")
# Q1
askpr=c(54.8, 77.8, 53.8, 61.5, 41.99, 65.99, 71.99, 58.8, 51.68, 60.8, 78.8, 68.5, 50.8, 51.99, 45.99, 33.7, 73.9, 53.9, 40.8, 68.8, 58.68, 81.9, 54.98, 50.8, 48.8, 57.5, 56.88, 57.8, 86.8, 46.8, 47.9, 58.39, 59.8, 74.8, 40.8, 73.8, 25.9, 108.8, 65.8, 53.8)
ffarea=c(11.26, 16.5, 12.22, 14.5, 12.9, 22.78, 15.05, 17.37, 15.1, 13.2, 19.48, 15.76, 12.27, 12.09, 16.01, 12, 15.15, 11.84, 12.26, 15.95, 13.96, 20.95, 13.06, 16.6, 14.8, 13.46, 15.78, 12.01, 15.08, 16.2, 12.1, 15.09, 17.63, 17.48, 14, 17.54, 6.1, 23.98, 13.45, 10.95)
age=c(0, 3, 9, 7, 44, 35, 8, 26, 20, 3, 11, 4, 17, 7, 25, 28, 0, 15, 29, 18, 9, 19, 1, 23, 50, 10, 17, 0, 1, 30, 7, 8, 26, 5, 38, 9, 11, 16, 1, 18)
richmondtownh=data.frame(askpr,ffarea,age)
reg = lm(askpr~ffarea + age)
summary(reg)
summary(reg)$r.squared # 0.8116191
mean(askpr) # 59.4265
sd(askpr) # 15.40821
# mean_x_T = cbind(1, mean(ffarea), mean(age))
# mean_y_hat = reg$coefficients %*% t(mean_x_T)
# mean_y_hat # 59.4265
y_hat = reg$fitted.values
mean_y_hat = mean(y_hat)
mean_y_hat # 59.4265
sd_y_hat = sd(y_hat)
sd_y_hat # 13.88124
cov(askpr, y_hat) # 192.6889
cor(askpr, y_hat) # 0.9008991
w_i = 14.1435 + 3.93777 * ffarea - 0.86737 * age
cor(w_i, askpr)
# Q2
applicants=c(66.515, 50.299, 14.552, 16.958, 33.736, 21.359, 31.941, 20.443, 9.679, 10.394, 36.788, 20.923, 11.258, 35.822, 5.713, 19.814, 24.988, 33.714, 14.887, 7.101, 44.76, 12.34, 16.689, 25.194, 26.496, 60.543, 5.345, 10.991, 30.266, 1.751, 5.111, 10.111, 7.408, 12.92, 16.125, 5.002, 28.518, 15.61, 36.362, 13.758, 5.017, 10.217, 49.776, 25.438, 36.101, 7.075, 18.107, 8.832, 5.465, 18.42, 39.896, 73.782, 20.934, 10.245, 14.944, 10.332, 31.611, 14.116, 32.19, 31.332, 7.532, 20.744, 8.754, 3.542, 40.727, 73.448, 31.28, 20.175, 25.884, 20.756, 24.233, 20.918, 13.799, 33.226, 86.537)
per.admit=c(37, 50, 33, 83, 51, 75, 60, 52, 63, 95, 53, 77, 83, 59, 83, 51, 53, 41, 82, 70, 45, 36, 76, 68, 62, 40, 93, 81, 55, 59, 76, 52, 87, 70, 84, 84, 44, 64, 76, 75, 49, 60, 32, 57, 58, 57, 60, 84, 83, 80, 59, 16, 74, 61, 66, 63, 55, 78, 71, 28, 79, 73, 95, 89, 56, 33, 50, 53, 33, 52, 73, 56, 84, 50, 19)
num.enroll=c(30.051, 47.04, 8.437, 25.912, 36.047, 24.096, 48.378, 33.989, 20.517, 20.626, 58.322, 16.571, 13.183, 45.14, 14.747, 20.611, 41.938, 24.607, 28.686, 15.829, 51.147, 5.962, 35.313, 22.68, 37.485, 34.508, 13.952, 31.515, 41.226, 11.645, 7.099, 9.233, 28.515, 30.69, 29.477, 16.936, 16.695, 27.238, 46.416, 30.848, 10.241, 13.979, 43.625, 42.598, 21.498, 10.725, 20.655, 19.934, 15.805, 15.117, 39.752, 37.565, 29.217, 39.74, 30.297, 11.314, 44.784, 28.886, 61.642, 29.135, 19.507, 31.224, 14.534, 10.061, 17.866, 30.709, 26.541, 49.61, 23.109, 21.857, 12.856, 35.197, 14.982, 60.767, 41.845)
stfacratio=c(19, 17, 12, 17, 21, 19, 16, 16, 21, 20, 18, 17, 20, 19, 19, 15, 25, 16, 15, 17, 17, 16, 18, 15, 14, 18, 18, 17, 26, 13, 13, 18, 22, 19, 21, 17, 20, 19, 17, 17, 15, 19, 12, 18, 19, 18, 15, 22, 20, 19, 12, 17, 18, 26, 24, 11, 18, 19, 20, 13, 13, 16, 19, 17, 18, 19, 16, 26, 18, 16, 15, 18, 19, 31, 16)
avg.grant=c(17.09, 6.541, 14.779, 8.901, 10.736, 6.451, 10.726, 9.322, 5.421, 7.338, 8.435, 9.507, 7.746, 11.818, 4.89, 8.076, 5.976, 7.621, 10.526, 8.591, 7.511, 9.138, 6.18, 8.788, 7.327, 15.528, 5.036, 6.726, 4.58, 6.601, 10.316, 7.215, 4.965, 7.959, 6.229, 5.896, 6.838, 6.372, 8.834, 7.736, 6.974, 7.879, 14.671, 8.036, 16.227, 7.745, 9.097, 5.462, 5.826, 11.579, 9.322, 16.425, 5.715, 6.234, 5.343, 9.924, 13.821, 7.035, 8.731, 13.447, 7.576, 7.95, 5.969, 4.412, 17.287, 16.638, 10.265, 5.055, 8.798, 8.684, 12.615, 8.227, 4.582, 4.616, 17.423)
grad.rate=c(86, 86, 93, 68, 67, 67, 79, 71, 50, 46, 82, 63, 43, 84, 53, 54, 57, 70, 67, 44, 73, 67, 62, 80, 66, 81, 49, 59, 75, 19, 66, 12, 41, 38, 52, 34, 79, 53, 75, 56, 40, 61, 91, 82, 66, 43, 57, 54, 37, 78, 70, 91, 63, 40, 41, 69, 81, 61, 80, 89, 56, 83, 50, 45, 74, 86, 82, 49, 79, 82, 76, 79, 49, 65, 92)
region=c('FarWest', 'Mid', 'Southeast', 'Southeast', 'Southeast', 'FarWest', 'Mid', 'Southeast', 'Southeast', 'GLNE', 'GLNE', 'GLNE', 'GLNE', 'GLNE', 'Mid', 'GLNE', 'Southeast', 'Mid', 'FarWest', 'West', 'Mid', 'West', 'GLNE', 'Mid', 'Mid', 'FarWest', 'West', 'West', 'Southeast', 'Southeast', 'GLNE', 'West', 'FarWest', 'GLNE', 'GLNE', 'GLNE', 'Mid', 'Southeast', 'GLNE', 'Southeast', 'Southeast', 'Mid', 'GLNE', 'GLNE', 'FarWest', 'Southeast', 'GLNE', 'FarWest', 'Southeast', 'GLNE', 'GLNE', 'FarWest', 'GLNE', 'West', 'Southeast', 'Mid', 'FarWest', 'FarWest', 'West', 'Southeast', 'FarWest', 'Southeast', 'Mid', 'Mid', 'FarWest', 'FarWest', 'GLNE', 'Southeast', 'Southeast', 'Southeast', 'GLNE', 'Southeast', 'West', 'Southeast', 'FarWest')
# univ$region <- relevel(factor(univ$region), ref = "Southeast")
region <- relevel(factor(region), ref = "Southeast")
univ = data.frame(applicants, per.admit, num.enroll, stfacratio, avg.grant, grad.rate, region)
reg_2 = lm(log(applicants) ~ per.admit + num.enroll + stfacratio + avg.grant + grad.rate + region)
sum_reg_2 = summary(reg_2)
sum_reg_2
sum_reg_2$cov.unscaled
# point = c(1, )
reg_3 = lm(log(applicants) ~ per.admit + stfacratio + avg.grant + grad.rate + region * num.enroll)
summary(reg_3)
# Q2
applicants=c(66.515, 50.299, 14.552, 16.958, 33.736, 21.359, 31.941, 20.443, 9.679, 10.394, 36.788, 20.923, 11.258, 35.822, 5.713, 19.814, 24.988, 33.714, 14.887, 7.101, 44.76, 12.34, 16.689, 25.194, 26.496, 60.543, 5.345, 10.991, 30.266, 1.751, 5.111, 10.111, 7.408, 12.92, 16.125, 5.002, 28.518, 15.61, 36.362, 13.758, 5.017, 10.217, 49.776, 25.438, 36.101, 7.075, 18.107, 8.832, 5.465, 18.42, 39.896, 73.782, 20.934, 10.245, 14.944, 10.332, 31.611, 14.116, 32.19, 31.332, 7.532, 20.744, 8.754, 3.542, 40.727, 73.448, 31.28, 20.175, 25.884, 20.756, 24.233, 20.918, 13.799, 33.226, 86.537)
per.admit=c(37, 50, 33, 83, 51, 75, 60, 52, 63, 95, 53, 77, 83, 59, 83, 51, 53, 41, 82, 70, 45, 36, 76, 68, 62, 40, 93, 81, 55, 59, 76, 52, 87, 70, 84, 84, 44, 64, 76, 75, 49, 60, 32, 57, 58, 57, 60, 84, 83, 80, 59, 16, 74, 61, 66, 63, 55, 78, 71, 28, 79, 73, 95, 89, 56, 33, 50, 53, 33, 52, 73, 56, 84, 50, 19)
num.enroll=c(30.051, 47.04, 8.437, 25.912, 36.047, 24.096, 48.378, 33.989, 20.517, 20.626, 58.322, 16.571, 13.183, 45.14, 14.747, 20.611, 41.938, 24.607, 28.686, 15.829, 51.147, 5.962, 35.313, 22.68, 37.485, 34.508, 13.952, 31.515, 41.226, 11.645, 7.099, 9.233, 28.515, 30.69, 29.477, 16.936, 16.695, 27.238, 46.416, 30.848, 10.241, 13.979, 43.625, 42.598, 21.498, 10.725, 20.655, 19.934, 15.805, 15.117, 39.752, 37.565, 29.217, 39.74, 30.297, 11.314, 44.784, 28.886, 61.642, 29.135, 19.507, 31.224, 14.534, 10.061, 17.866, 30.709, 26.541, 49.61, 23.109, 21.857, 12.856, 35.197, 14.982, 60.767, 41.845)
stfacratio=c(19, 17, 12, 17, 21, 19, 16, 16, 21, 20, 18, 17, 20, 19, 19, 15, 25, 16, 15, 17, 17, 16, 18, 15, 14, 18, 18, 17, 26, 13, 13, 18, 22, 19, 21, 17, 20, 19, 17, 17, 15, 19, 12, 18, 19, 18, 15, 22, 20, 19, 12, 17, 18, 26, 24, 11, 18, 19, 20, 13, 13, 16, 19, 17, 18, 19, 16, 26, 18, 16, 15, 18, 19, 31, 16)
avg.grant=c(17.09, 6.541, 14.779, 8.901, 10.736, 6.451, 10.726, 9.322, 5.421, 7.338, 8.435, 9.507, 7.746, 11.818, 4.89, 8.076, 5.976, 7.621, 10.526, 8.591, 7.511, 9.138, 6.18, 8.788, 7.327, 15.528, 5.036, 6.726, 4.58, 6.601, 10.316, 7.215, 4.965, 7.959, 6.229, 5.896, 6.838, 6.372, 8.834, 7.736, 6.974, 7.879, 14.671, 8.036, 16.227, 7.745, 9.097, 5.462, 5.826, 11.579, 9.322, 16.425, 5.715, 6.234, 5.343, 9.924, 13.821, 7.035, 8.731, 13.447, 7.576, 7.95, 5.969, 4.412, 17.287, 16.638, 10.265, 5.055, 8.798, 8.684, 12.615, 8.227, 4.582, 4.616, 17.423)
grad.rate=c(86, 86, 93, 68, 67, 67, 79, 71, 50, 46, 82, 63, 43, 84, 53, 54, 57, 70, 67, 44, 73, 67, 62, 80, 66, 81, 49, 59, 75, 19, 66, 12, 41, 38, 52, 34, 79, 53, 75, 56, 40, 61, 91, 82, 66, 43, 57, 54, 37, 78, 70, 91, 63, 40, 41, 69, 81, 61, 80, 89, 56, 83, 50, 45, 74, 86, 82, 49, 79, 82, 76, 79, 49, 65, 92)
region=c('FarWest', 'Mid', 'Southeast', 'Southeast', 'Southeast', 'FarWest', 'Mid', 'Southeast', 'Southeast', 'GLNE', 'GLNE', 'GLNE', 'GLNE', 'GLNE', 'Mid', 'GLNE', 'Southeast', 'Mid', 'FarWest', 'West', 'Mid', 'West', 'GLNE', 'Mid', 'Mid', 'FarWest', 'West', 'West', 'Southeast', 'Southeast', 'GLNE', 'West', 'FarWest', 'GLNE', 'GLNE', 'GLNE', 'Mid', 'Southeast', 'GLNE', 'Southeast', 'Southeast', 'Mid', 'GLNE', 'GLNE', 'FarWest', 'Southeast', 'GLNE', 'FarWest', 'Southeast', 'GLNE', 'GLNE', 'FarWest', 'GLNE', 'West', 'Southeast', 'Mid', 'FarWest', 'FarWest', 'West', 'Southeast', 'FarWest', 'Southeast', 'Mid', 'Mid', 'FarWest', 'FarWest', 'GLNE', 'Southeast', 'Southeast', 'Southeast', 'GLNE', 'Southeast', 'West', 'Southeast', 'FarWest')
region <- relevel(factor(region), ref = "West")
univ = data.frame(applicants, per.admit, num.enroll, stfacratio, avg.grant, grad.rate, region)
reg_2 = lm(log(applicants) ~ per.admit + num.enroll + stfacratio + avg.grant + grad.rate + region)
sum_reg_2 = summary(reg_2)
sum_reg_2
# Q2
applicants=c(66.515, 50.299, 14.552, 16.958, 33.736, 21.359, 31.941, 20.443, 9.679, 10.394, 36.788, 20.923, 11.258, 35.822, 5.713, 19.814, 24.988, 33.714, 14.887, 7.101, 44.76, 12.34, 16.689, 25.194, 26.496, 60.543, 5.345, 10.991, 30.266, 1.751, 5.111, 10.111, 7.408, 12.92, 16.125, 5.002, 28.518, 15.61, 36.362, 13.758, 5.017, 10.217, 49.776, 25.438, 36.101, 7.075, 18.107, 8.832, 5.465, 18.42, 39.896, 73.782, 20.934, 10.245, 14.944, 10.332, 31.611, 14.116, 32.19, 31.332, 7.532, 20.744, 8.754, 3.542, 40.727, 73.448, 31.28, 20.175, 25.884, 20.756, 24.233, 20.918, 13.799, 33.226, 86.537)
per.admit=c(37, 50, 33, 83, 51, 75, 60, 52, 63, 95, 53, 77, 83, 59, 83, 51, 53, 41, 82, 70, 45, 36, 76, 68, 62, 40, 93, 81, 55, 59, 76, 52, 87, 70, 84, 84, 44, 64, 76, 75, 49, 60, 32, 57, 58, 57, 60, 84, 83, 80, 59, 16, 74, 61, 66, 63, 55, 78, 71, 28, 79, 73, 95, 89, 56, 33, 50, 53, 33, 52, 73, 56, 84, 50, 19)
num.enroll=c(30.051, 47.04, 8.437, 25.912, 36.047, 24.096, 48.378, 33.989, 20.517, 20.626, 58.322, 16.571, 13.183, 45.14, 14.747, 20.611, 41.938, 24.607, 28.686, 15.829, 51.147, 5.962, 35.313, 22.68, 37.485, 34.508, 13.952, 31.515, 41.226, 11.645, 7.099, 9.233, 28.515, 30.69, 29.477, 16.936, 16.695, 27.238, 46.416, 30.848, 10.241, 13.979, 43.625, 42.598, 21.498, 10.725, 20.655, 19.934, 15.805, 15.117, 39.752, 37.565, 29.217, 39.74, 30.297, 11.314, 44.784, 28.886, 61.642, 29.135, 19.507, 31.224, 14.534, 10.061, 17.866, 30.709, 26.541, 49.61, 23.109, 21.857, 12.856, 35.197, 14.982, 60.767, 41.845)
stfacratio=c(19, 17, 12, 17, 21, 19, 16, 16, 21, 20, 18, 17, 20, 19, 19, 15, 25, 16, 15, 17, 17, 16, 18, 15, 14, 18, 18, 17, 26, 13, 13, 18, 22, 19, 21, 17, 20, 19, 17, 17, 15, 19, 12, 18, 19, 18, 15, 22, 20, 19, 12, 17, 18, 26, 24, 11, 18, 19, 20, 13, 13, 16, 19, 17, 18, 19, 16, 26, 18, 16, 15, 18, 19, 31, 16)
avg.grant=c(17.09, 6.541, 14.779, 8.901, 10.736, 6.451, 10.726, 9.322, 5.421, 7.338, 8.435, 9.507, 7.746, 11.818, 4.89, 8.076, 5.976, 7.621, 10.526, 8.591, 7.511, 9.138, 6.18, 8.788, 7.327, 15.528, 5.036, 6.726, 4.58, 6.601, 10.316, 7.215, 4.965, 7.959, 6.229, 5.896, 6.838, 6.372, 8.834, 7.736, 6.974, 7.879, 14.671, 8.036, 16.227, 7.745, 9.097, 5.462, 5.826, 11.579, 9.322, 16.425, 5.715, 6.234, 5.343, 9.924, 13.821, 7.035, 8.731, 13.447, 7.576, 7.95, 5.969, 4.412, 17.287, 16.638, 10.265, 5.055, 8.798, 8.684, 12.615, 8.227, 4.582, 4.616, 17.423)
grad.rate=c(86, 86, 93, 68, 67, 67, 79, 71, 50, 46, 82, 63, 43, 84, 53, 54, 57, 70, 67, 44, 73, 67, 62, 80, 66, 81, 49, 59, 75, 19, 66, 12, 41, 38, 52, 34, 79, 53, 75, 56, 40, 61, 91, 82, 66, 43, 57, 54, 37, 78, 70, 91, 63, 40, 41, 69, 81, 61, 80, 89, 56, 83, 50, 45, 74, 86, 82, 49, 79, 82, 76, 79, 49, 65, 92)
region=c('FarWest', 'Mid', 'Southeast', 'Southeast', 'Southeast', 'FarWest', 'Mid', 'Southeast', 'Southeast', 'GLNE', 'GLNE', 'GLNE', 'GLNE', 'GLNE', 'Mid', 'GLNE', 'Southeast', 'Mid', 'FarWest', 'West', 'Mid', 'West', 'GLNE', 'Mid', 'Mid', 'FarWest', 'West', 'West', 'Southeast', 'Southeast', 'GLNE', 'West', 'FarWest', 'GLNE', 'GLNE', 'GLNE', 'Mid', 'Southeast', 'GLNE', 'Southeast', 'Southeast', 'Mid', 'GLNE', 'GLNE', 'FarWest', 'Southeast', 'GLNE', 'FarWest', 'Southeast', 'GLNE', 'GLNE', 'FarWest', 'GLNE', 'West', 'Southeast', 'Mid', 'FarWest', 'FarWest', 'West', 'Southeast', 'FarWest', 'Southeast', 'Mid', 'Mid', 'FarWest', 'FarWest', 'GLNE', 'Southeast', 'Southeast', 'Southeast', 'GLNE', 'Southeast', 'West', 'Southeast', 'FarWest')
univ = data.frame(applicants, per.admit, num.enroll, stfacratio, avg.grant, grad.rate, region)
reg_2 = lm(log(applicants) ~ per.admit + num.enroll + stfacratio + avg.grant + grad.rate + region)
sum_reg_2 = summary(reg_2)
sum_reg_2
# Load the data
# install.packages("leaps")  # Run this once if you do not have the package
library(leaps)
bp = read.table("Lab 8/blood_pressure.txt", header=T)
# Question 6
s2 = regsubsets(Systol~., data=bp, method="forward")
#| context: output
#| fig-height: 4
#| fig-width: 4
#| out-width: 75%
x1 = -5:5
x2 = x1
plot(x1, x2, pch=19, cex=1.5, xlim=c(-5.25,5.25), ylim=c(-5.25,5.25))
abline(h=0, v=0, col="lightgray")
#| context: output
#| fig-height: 4
#| fig-width: 4
#| out-width: 75%
x1 = -5:5
x2 = rep(0, length(x1))
plot(x1, x1, pch=19, cex=1.5, xlim=c(-5.25,5.25), ylim=c(-5.25,5.25),
xlab="x1", ylab="x2", main="Rotate data", col="lightgray")
abline(h=0, v=0, col="lightgray")
points(x1, x2, pch=19, cex=1.5)
#| context: output
#| fig-height: 4
#| fig-width: 4
#| out-width: 75%
# Generate data
set.seed(306)
x1 = -5:5
x2 = x1 + rnorm(length(x1), 0, sd=0.5)
# Create plot
plot(x1, x2, pch=19, cex=1.5, xlim=c(-5.25,5.25), ylim=c(-5.25,5.25))
abline(h=0, v=0, col="lightgray")
#| context: output
#| fig-height: 4
#| fig-width: 4
#| out-width: 75%
# Generate data
set.seed(306)
x1 = -5:5
x2 = x1 + rnorm(length(x1), 0, sd=0.5)
# Rotate data
rx1 = x1*cos(-pi/4) - x2*sin(-pi/4)
rx2 = x1*sin(-pi/4) + x2*cos(-pi/4)
# Create plot
plot(x1, x2, pch=19, cex=1.5, xlim=c(-5.25,5.25), ylim=c(-5.25,5.25),
xlab="x1", ylab="x2", main="Rotate data", col="lightgray")
abline(h=0, v=0, col="lightgray")
points(rx1, rx2, pch=19, cex=1.5)
#| context: output
#| fig-height: 4
#| fig-width: 4
#| out-width: 75%
# Generate data
set.seed(306)
x1 = -5:5
x2 = x1 + rnorm(length(x1), 0, sd=0.5)
# Rotate data
rx1 = x1*cos(-pi/4) - x2*sin(-pi/4)
rx2 = x1*sin(-pi/4) + x2*cos(-pi/4)
# Create plot
plot(rx1, rx2, pch=19, cex=1.5, xlim=c(-5.25,5.25), ylim=c(-5.25,5.25),
xlab="x1", ylab="x2", main="Drop second dimension", col="lightgray")
abline(h=0, v=0, col="lightgray")
points(rx1, rep(0,length(x1)), pch=19, cex=1.5)
#| context: output
#| fig-height: 4
#| fig-width: 8
#| out-width: 75%
# Generate data
set.seed(306)
x1 = (-5:5) + 1
x2 = x1 - 2.5 + rnorm(length(x1), 0, sd=0.5)
# Rotate points
rx1 = x1*cos(-pi/4) - x2*sin(-pi/4)
rx2 = x1*sin(-pi/4) + x2*cos(-pi/4)
# Create plots
par(mfrow=c(1,2))
plot(x1, x2, pch=19, cex=1.5, xlim=c(-5.25,5.25), ylim=c(-5.25,5.25),
main="1. Uncentered points")
abline(h=0, v=0, col="lightgray")
plot(x1, x2, pch=19, cex=1.5, xlim=c(-5.25,5.25), ylim=c(-5.25,5.25),
main="2. Rotate uncentered points", col="lightgray")
abline(h=0, v=0, col="lightgray")
points(rx1, rx2, pch=19, cex=1.5)
#| context: output
#| fig-height: 4
#| fig-width: 8
#| out-width: 75%
# Generate data
set.seed(306)
x1 = (-5:5) + 1
x2 = x1 - 2.5 + rnorm(length(x1), 0, sd=0.5)
# Center points
cx1 = x1 - mean(x1)
cx2 = x2 - mean(x2)
# Rotate centered points
rx1 = cx1*cos(-pi/4) - cx2*sin(-pi/4)
rx2 = cx1*sin(-pi/4) + cx2*cos(-pi/4)
# Create plots
par(mfrow=c(1,2))
plot(x1, x2, pch=19, cex=1.5, xlim=c(-5.25,5.25), ylim=c(-5.25,5.25), col="lightgray",
main="1. Center points")
abline(h=0, v=0, col="lightgray")
points(cx1, cx2, pch=19, cex=1.5)
plot(cx1, cx2, pch=19, cex=1.5, xlim=c(-5.25,5.25), ylim=c(-5.25,5.25),
xlab="x1", ylab="x2", main="2. Rotate centered points", col="lightgray")
abline(h=0, v=0, col="lightgray")
points(rx1, rx2, pch=19, cex=1.5)
# Load data
athl_url = url("https://ubc-stat.github.io/stat-306-student/lecture-data/hs_athletes.txt")
athl = read.table(athl_url, header=T, sep="\t")
# Fit linear model on all covariates
reg = lm(X40.YD~., data=athl)
summary(reg)
# Extract matrix of just covariates
X = athl[,-7]
# Compute PCA on the data
pcs = princomp(X)
pcs$loadings  # Rotation/loading matrix
pcs$scores    # Principal components
pcs$sdev      # Standard deviations of rotated data, i.e., sqrt(lambda_1),...,sqrt(lambda_p)
# Plot the variation in covariates associated with each PC
plot(pcs)
# Determine how many principal components to keep
# TODO
lambdas = pcs$sdev^2
( sum(lambdas[1])/sum(lambdas) )
( sum(lambdas[1:2])/sum(lambdas) )
( sum(lambdas[1:3])/sum(lambdas) )
( sum(lambdas[1:5])/sum(lambdas) )
( sum(lambdas[1:10])/sum(lambdas) )
# Potentially relevant quantities:
pcs$loadings  # Rotation/loading matrix
pcs$scores    # Principal components
pcs$sdev      # Standard deviations of rotated data, i.e., sqrt(lambda_1),...,sqrt(lambda_p)
# Shows data compressed to two-dimensions (PCs 1 and 2)
# Loading vectors shown in red
biplot(pcs)
# Compute PCA on the standardized covariates
pcs_cor = princomp(X, cor=T)
biplot(pcs_cor)
# Fit PCR with the first two PCs
pc_reg = lm(athl$X40.YD~pcs_cor$scores[,1:2])
summary(pc_reg)
install.packages("tidyverse")
install.packages('IRkernel')
install.packages('tinytex')
tinytex::install_tinytex()
getwd()
getwd()
options(repr.plot.width = 15, repr.plot.height = 10, warn = -1)
library(reticulate) # Run python script in R; used for data extraction only
library(tidyverse) # Better presentation of data
# install.packages("tidymodels")
library(tidymodels)
library(ggplot2) # Provides commands to create complex plots
library(patchwork)
# install.packages("ROSE")
library(ROSE) # Oversampling for balancing data
options(repr.plot.width = 15, repr.plot.height = 10, warn = -1)
library(reticulate) # Run python script in R; used for data extraction only
library(tidyverse) # Better presentation of data
# install.packages("tidymodels")
library(tidymodels)
library(ggplot2) # Provides commands to create complex plots
library(patchwork)
# install.packages("ROSE")
library(ROSE) # Oversampling for balancing data
# Do only once. Takes ages but it works.
# This run the python script to extract file from uci in R
py_run_file("/home/jovyan/work/src/dataset_download.py")
# Importing required packages for analysis. Suppress warnings and startup messages the first time libraries are loaded
suppressPackageStartupMessages({
suppressWarnings(library(reticulate)) # Run Python code in R session
suppressWarnings(library(tidyverse)) # Data wrangling and visualization
suppressWarnings(library(tidymodels)) # Machine learning tools
suppressWarnings(library(glmnet)) # Fit generalized linear models by penalty
suppressWarnings(library(patchwork)) # Combine plots
suppressWarnings(library(ROSE)) # Random Over-Sampling Examples for dataset balancing
suppressWarnings(library(vcd)) # For CramÃ©râ€™s V
})
# Do only once. Takes ages but it works.
# This run the python script to extract file from uci in R
# py_run_file("/home/jovyan/work/src/dataset_download.py")
# Reads the downloaded dataset into a variable named raw_diabetes_df
raw_diabetes_df <- read_csv("/home/jovyan/work/data/raw/cdc_diabetes_health_indicators.csv", show_col_types = FALSE)
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
